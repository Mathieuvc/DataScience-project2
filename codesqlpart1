DROP SCHEMA IF EXISTS mytunes_dim;

CREATE SCHEMA mytunes_dim;

USE mytunes_dim;

/* creating customer dimension */

CREATE TABLE IF NOT EXISTS dim_customers(
	customer_key INT auto_increment PRIMARY KEY,
    customer_id INT NOT NULL,
    company VARCHAR(80),
    first_name VARCHAR(80) NOT NULL,
    last_name VARCHAR(80) NOT NULL,
    address VARCHAR(200) NOT NULL, 
	city VARCHAR(80) NOT NULL, 
    state VARCHAR(80) NOT NULL, 
    postcode VARCHAR(10) NOT NULL, 
    email VARCHAR(60) NOT NULL, 
    valid_from DATETIME NOT NULL DEFAULT NOW(),
    valid_to DATETIME NOT NULL DEFAULT '9999-12-31 00:00:00'
);

/* inserting info in customer dimension table */

INSERT INTO dim_customers(customer_id, company, first_name, last_name, address, city, state, postcode, email)
SELECT CustomerId, Company, FirstName, LastName, Address, City, State, Postcode, Email
FROM MyTunes.Customer;

/* creating track dimension */

CREATE TABLE IF NOT EXISTS dim_track(
	track_key INT auto_increment PRIMARY KEY,
    track_id INT NOT NULL,
    track_name VARCHAR(500) NOT NULL,
    album_id INT, 
    album_name VARCHAR(500) NOT NULL,
    artist_id INT,
    artist_name VARCHAR(500) NOT NULL,
    unit_price DECIMAL(10,2), 
    valid_from DATETIME NOT NULL DEFAULT NOW(),
    valid_to DATETIME NOT NULL DEFAULT '9999-12-31 00:00:00'
);

/* inserting info in track dimension table */

INSERT INTO dim_track(track_id, track_name, album_id, album_name, artist_id, artist_name, unit_price)
SELECT t.TrackId, t.Name,t.albumid, t.Title, ar.artistid, ar.Name, t.unitprice
FROM MyTunes.Artist ar INNER JOIN 
	(SELECT TrackId, Name, Title, ArtistId, tr.AlbumId, tr.unitprice
	FROM MyTunes.Track tr INNER JOIN MyTunes.Album al
		ON tr.AlbumId = al.AlbumId) t
	ON ar.ArtistId = t.ArtistId;

/* creating time dimension */

CREATE TABLE IF NOT EXISTS dim_time(
	time_key INT auto_increment PRIMARY KEY,
    year INT NOT NULL,
    month INT NOT NULL,
    quarter INT NOT NULL,
    day INT NOT NULL,
    day_of_week INT NOT NULL 
);

/* inserting info in time dimension table */

INSERT INTO dim_time(year, month, quarter, day, day_of_week)
select distinct year(InvoiceDate), month(InvoiceDate), quarter(InvoiceDate), dayofmonth(InvoiceDate), dayofweek(InvoiceDate)
from MyTunes.invoice;

CREATE TABLE IF NOT EXISTS dim_invoice(
	invoice_key INT auto_increment PRIMARY KEY,
    invoice_id INT NOT NULL,
    billing_country VARCHAR(80) NOT NULL,
    billing_state VARCHAR(80) NOT NULL,
    billing_city VARCHAR(80) NOT NULL,
    billing_address VARCHAR(100) NOT NULL,
    billing_postal_code VARCHAR(80) NOT NULL, 
    Total decimal (10,2),
    valid_from DATETIME NOT NULL DEFAULT NOW(),
    valid_to DATETIME NOT NULL DEFAULT '9999-12-31 00:00:00'
);

/* inserting info in invoice dimension table */

INSERT INTO dim_invoice(invoice_id, billing_country, billing_state, billing_city, billing_address, billing_postal_code, total)
SELECT InvoiceId, BillingCountry, BillingState, Billingcity, Billingaddress, Billingpostalcode, Total
FROM MyTunes.invoice;


/* create the fact table of our star schema */

CREATE TABLE IF NOT EXISTS fct_order_value( 
    customer_key INT NOT NULL,
    track_key INT NOT NULL,
    time_key  INT NOT NULL,
    invoice_key INT NOT NULL, 
  	order_value FLOAT NOT NULL,
    
    	FOREIGN KEY (customer_key) REFERENCES dim_customers(customer_key),
    	FOREIGN KEY (track_key) REFERENCES dim_track(track_key),
		FOREIGN KEY (time_key) REFERENCES dim_time(time_key),
		FOREIGN KEY (invoice_key) REFERENCES dim_invoice(invoice_key)
);

/* insert the values of the keys in fact table and total amount ordered in fact table*/

INSERT INTO fct_order_value(customer_key, track_key, time_key, invoice_key, order_value)	
SELECT cd.customer_key, trd.track_key, tid.time_key, di.invoice_key, def.total_amount
FROM 
    (SELECT i.CustomerId, year(i.InvoiceDate) as year, quarter(i.InvoiceDate) as quarter, month(i.InvoiceDate) as month, dayofmonth(i.InvoiceDate) as day, dayofweek(i.InvoiceDate) as day_of_week,	
			i.BillingCountry, i.InvoiceId, abc.TrackId, abc.total_amount
	FROM MyTunes.Invoice i INNER JOIN 
		(SELECT invoiceId, il.TrackId,il.UnitPrice*il.Quantity as total_amount
			FROM MyTunes.InvoiceLine il INNER JOIN MyTunes.Track tr 
			ON tr.TrackID = il.TrackID) abc
		ON i.InvoiceId = abc.InvoiceId) def
	INNER JOIN dim_customers cd
    INNER JOIN dim_time tid
    INNER JOIN dim_invoice di
    INNER JOIN dim_track trd
	ON (cd.customer_id = def.CustomerID AND cd.valid_to = '9999-12-31 00:00:00' 
		AND tid.year = def.year AND tid.quarter = def.quarter AND tid.month = def.month AND tid.day = def.day AND tid.day_of_week = def.day_of_week
        AND di.invoice_id = def.InvoiceId AND di.valid_to = '9999-12-31 00:00:00'
        AND trd.track_id = def.TrackId AND trd.valid_to = '9999-12-31 00:00:00'
);
