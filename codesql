DROP SCHEMA IF EXISTS mytunes_dim;

CREATE SCHEMA mytunes_dim;

USE mytunes_dim;

/* creating customer dimension */

CREATE TABLE IF NOT EXISTS dim_customers(
	customer_key INT auto_increment PRIMARY KEY,
    customer_id INT NOT NULL,
    company VARCHAR(80),
    first_name VARCHAR(80) NOT NULL,
    last_name VARCHAR(80) NOT NULL,
    valid_from DATETIME NOT NULL DEFAULT NOW(),
    valid_to DATETIME NOT NULL DEFAULT '9999-12-31 00:00:00'
);

/* inserting info in customer dimension table */

INSERT INTO dim_customers(customer_id, company, first_name, last_name)
SELECT CustomerId, Company, FirstName, LastName
FROM MyTunes.Customer;

CREATE TABLE IF NOT EXISTS dim_track(
	track_key INT auto_increment PRIMARY KEY,
    track_id INT NOT NULL,
    name VARCHAR(500) NOT NULL,
    album VARCHAR(500) NOT NULL,
    artist VARCHAR(500) NOT NULL,
    valid_from DATETIME NOT NULL DEFAULT NOW(),
    valid_to DATETIME NOT NULL DEFAULT '9999-12-31 00:00:00'
);

/* inserting info in track dimension table */

INSERT INTO dim_track(track_id, name, album, artist)
SELECT t.TrackId, t.Name, t.Title, ar.Name
FROM MyTunes.Artist ar INNER JOIN 
	(SELECT TrackId, Name, Title, ArtistId, tr.AlbumId
	FROM MyTunes.Track tr INNER JOIN MyTunes.Album al
		ON tr.AlbumId = al.AlbumId) t
	ON ar.ArtistId = t.ArtistId;


/* creating time dimension */

CREATE TABLE IF NOT EXISTS dim_time(
	time_key INT auto_increment PRIMARY KEY,
    year INT NOT NULL,
    month INT NOT NULL,
    quarter INT NOT NULL,
    day INT NOT NULL,
    day_of_week INT NOT NULL 
);

/* inserting info in time dimension table */

INSERT INTO dim_time(year, month, quarter, day, day_of_week)
select distinct year(InvoiceDate), month(InvoiceDate), quarter(InvoiceDate), dayofmonth(InvoiceDate), dayofweek(InvoiceDate)
from MyTunes.invoice;

/* creating invoice dimension */

CREATE TABLE IF NOT EXISTS dim_invoice(
	invoice_key INT auto_increment PRIMARY KEY,
    invoice_id INT NOT NULL,
    billing_country VARCHAR(80) NOT NULL,
    valid_from DATETIME NOT NULL DEFAULT NOW(),
    valid_to DATETIME NOT NULL DEFAULT '9999-12-31 00:00:00'
);

/* inserting info in invoice dimension table */

INSERT INTO dim_invoice(invoice_id, billing_country)
SELECT InvoiceId, BillingCountry
FROM MyTunes.invoice;

/* create the fact table of our star schema */

CREATE TABLE IF NOT EXISTS dim_fact( 
    customer_key INT NOT NULL,
    track_key INT NOT NULL,
    time_key  INT NOT NULL,
    invoice_key INT NOT NULL, 
    total_amount FLOAT NOT NULL,
  	
    	FOREIGN KEY (customer_key) REFERENCES dim_customers(customer_key),
    	FOREIGN KEY (track_key) REFERENCES dim_track(track_key),
		FOREIGN KEY (time_key) REFERENCES dim_time(time_key),
		FOREIGN KEY (invoice_key) REFERENCES dim_invoice(invoice_key)
        );

INSERT INTO mytunes_dim.dim_fact(customer_key,track_key,time_key,invoice_key, total_amount)
WITH sales_per_invoiceline as (
SELECT ili.invoicelineid, inv.customerid, year(inv.invoicedate) as year, month(inv.invoicedate) as month, dayofmonth(inv.invoicedate) as day, sum(ili.quantity * ili.unitprice) as total_amount, ili.trackid, inv.invoiceid
FROM MyTunes.invoice inv INNER JOIN MyTunes.invoiceline ili on inv.invoiceid = ili.invoiceid
group by ili.invoicelineid)
SELECT dc.customer_key, dtr.track_key, dt.time_key, di.invoice_key, spi.total_amount
FROM sales_per_invoiceline spi INNER JOIN dim_customers dc INNER JOIN dim_invoice di INNER JOIN dim_track dtr INNER JOIN dim_time dt
ON (dc.customer_id = spi.customerid AND di.invoice_id = spi.invoiceid AND dtr.track_id = spi.trackid AND dt.year = spi.year AND dt.month = spi.month and dt.day = spi.day)
;


